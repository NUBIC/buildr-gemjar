#!/usr/bin/env bash
cat <<EOF
********************************************************************
*  RVM will install the environment for Buildr development now.
*  By default it will use ruby-1.9.2-p320.
*  To force use an other version of ruby, set BUILDR_RUBY_VERSION.
*  Examples:
*     export BUILDR_RUBY_VERSION=ruby-1.9.2-p320
*     export BUILDR_RUBY_VERSION=jruby-1.6.7
*     export BUILDR_RUBY_VERSION=ruby-1.8.7-p358
********************************************************************
EOF

export BUILDR_RUBY_VERSION="${BUILDR_RUBY_VERSION:-ruby-1.9.2-p320}"
project_dir=`pwd`
export BUILDR_GEMSET=${BUILDR_GEMSET-`basename "$project_dir"`}

detected_version=`rvm list strings | grep ${BUILDR_RUBY_VERSION}`
if [ "X" == "X${detected_version}" ]; then
  echo "${BUILDR_RUBY_VERSION} was not found, running 'rvm install ${BUILDR_RUBY_VERSION}'..."
  bash rvm install ${BUILDR_RUBY_VERSION}
fi

# Force the creation of the gemset
rvm use "${BUILDR_RUBY_VERSION}@${BUILDR_GEMSET}" --create

# TODO: Consider the user of do notation ala rvm 1.8.7-p334 do rvm gemset create my_gemset
# as documented at https://rvm.io/workflow/scripting/

export JRUBY_OPTS="-J-XX:MaxPermSize=312m -J-Xmx1024M"
export JAVA_OPTS="-Xmx1024m -XX:MaxPermSize=312m"

if [ -f Gemfile ]; then
  rvm "${BUILDR_RUBY_VERSION}@${BUILDR_GEMSET}" exec gem list | grep 'bundler' &> /dev/null
  if [ $? -gt 0 ]; then
    echo "Installing bundler..."
    bash rvm "${BUILDR_RUBY_VERSION}@${BUILDR_GEMSET}" exec gem install bundler
  fi
  rm -f Gemfile.lock
  rvm "${BUILDR_RUBY_VERSION}@${BUILDR_GEMSET}" exec bundle install --no-binstubs
fi
